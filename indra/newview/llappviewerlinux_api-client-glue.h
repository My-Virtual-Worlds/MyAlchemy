
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__llappviewerlinux_api_client_glue_h__proxy__H__
#define __sdbuscpp__llappviewerlinux_api_client_glue_h__proxy__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace com {
namespace secondlife {

class ViewerAppAPI_proxy
{
public:
    static constexpr const char* INTERFACE_NAME = "com.secondlife.ViewerAppAPI";

protected:
    ViewerAppAPI_proxy(sdbus::IProxy& proxy)
        : proxy_(&proxy)
    {
    }

    ViewerAppAPI_proxy(const ViewerAppAPI_proxy&) = delete;
    ViewerAppAPI_proxy& operator=(const ViewerAppAPI_proxy&) = delete;
    ViewerAppAPI_proxy(ViewerAppAPI_proxy&&) = default;
    ViewerAppAPI_proxy& operator=(ViewerAppAPI_proxy&&) = default;

    ~ViewerAppAPI_proxy() = default;

public:
    bool GoSLURL(const std::string& slurl)
    {
        bool result;
        proxy_->callMethod("GoSLURL").onInterface(INTERFACE_NAME).withArguments(slurl).storeResultsTo(result);
        return result;
    }

private:
    sdbus::IProxy* proxy_;
};

}} // namespaces

#endif
