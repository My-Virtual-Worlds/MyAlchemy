
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__llappviewerlinux_api_server_glue_h__adaptor__H__
#define __sdbuscpp__llappviewerlinux_api_server_glue_h__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace com {
namespace secondlife {

class ViewerAppAPI_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "com.secondlife.ViewerAppAPI";

protected:
    ViewerAppAPI_adaptor(sdbus::IObject& object)
        : object_(&object)
    {
        object_->registerMethod("GoSLURL").onInterface(INTERFACE_NAME).withInputParamNames("slurl").withOutputParamNames("success_ret").implementedAs([this](const std::string& slurl){ return this->GoSLURL(slurl); });
    }

    ViewerAppAPI_adaptor(const ViewerAppAPI_adaptor&) = delete;
    ViewerAppAPI_adaptor& operator=(const ViewerAppAPI_adaptor&) = delete;
    ViewerAppAPI_adaptor(ViewerAppAPI_adaptor&&) = default;
    ViewerAppAPI_adaptor& operator=(ViewerAppAPI_adaptor&&) = default;

    ~ViewerAppAPI_adaptor() = default;

private:
    virtual bool GoSLURL(const std::string& slurl) = 0;

private:
    sdbus::IObject* object_;
};

}} // namespaces

#endif
